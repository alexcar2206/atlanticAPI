// <auto-generated />
using System;
using FMJ_Backend.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FMJ_Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FMJ_Backend.Modelos.Asociaciones", b =>
                {
                    b.Property<int>("Id_asociacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_asociacion"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registration_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_asociacion");

                    b.ToTable("asociaciones");

                    b.HasData(
                        new
                        {
                            Id_asociacion = 1,
                            Descripcion = "",
                            Nombre = "Asociacion 1",
                            Registration_date = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4035),
                            Ubicacion = ""
                        },
                        new
                        {
                            Id_asociacion = 2,
                            Descripcion = "",
                            Nombre = "Asociacion 2",
                            Registration_date = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4064),
                            Ubicacion = ""
                        },
                        new
                        {
                            Id_asociacion = 3,
                            Descripcion = "",
                            Nombre = "Asociacion 3",
                            Registration_date = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4066),
                            Ubicacion = ""
                        });
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Fotos", b =>
                {
                    b.Property<int>("Id_Foto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Foto"), 1L, 1);

                    b.Property<int>("Fk_idUsuaria")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Foto");

                    b.HasIndex("Fk_idUsuaria");

                    b.ToTable("fotos");

                    b.HasData(
                        new
                        {
                            Id_Foto = 1,
                            Fk_idUsuaria = 1,
                            Foto = new byte[0],
                            Tipo = "PERFIL"
                        },
                        new
                        {
                            Id_Foto = 2,
                            Fk_idUsuaria = 1,
                            Foto = new byte[0],
                            Tipo = "DNI"
                        },
                        new
                        {
                            Id_Foto = 4,
                            Fk_idUsuaria = 1,
                            Foto = new byte[0],
                            Tipo = "PUBLICACION"
                        },
                        new
                        {
                            Id_Foto = 5,
                            Fk_idUsuaria = 1,
                            Foto = new byte[0],
                            Tipo = "PUBLICACION"
                        },
                        new
                        {
                            Id_Foto = 6,
                            Fk_idUsuaria = 2,
                            Foto = new byte[0],
                            Tipo = "PERFIL"
                        },
                        new
                        {
                            Id_Foto = 7,
                            Fk_idUsuaria = 2,
                            Foto = new byte[0],
                            Tipo = "DNI"
                        },
                        new
                        {
                            Id_Foto = 9,
                            Fk_idUsuaria = 2,
                            Foto = new byte[0],
                            Tipo = "PUBLICACION"
                        },
                        new
                        {
                            Id_Foto = 10,
                            Fk_idUsuaria = 2,
                            Foto = new byte[0],
                            Tipo = "PUBLICACION"
                        });
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Insignias", b =>
                {
                    b.Property<int>("Id_insignia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_insignia"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_insignia");

                    b.ToTable("insignias");

                    b.HasData(
                        new
                        {
                            Id_insignia = 1,
                            Descripcion = "Insignia numero 1",
                            Icon = new byte[0],
                            Nombre = "Insignia 1"
                        },
                        new
                        {
                            Id_insignia = 2,
                            Descripcion = "Insignia numero 2",
                            Icon = new byte[0],
                            Nombre = "Insignia 2"
                        },
                        new
                        {
                            Id_insignia = 3,
                            Descripcion = "Insignia numero 3",
                            Icon = new byte[0],
                            Nombre = "Insignia 3"
                        });
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Intereses", b =>
                {
                    b.Property<int>("Id_interes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_interes"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_interes");

                    b.ToTable("intereses");

                    b.HasData(
                        new
                        {
                            Id_interes = 1,
                            Descripcion = "",
                            Nombre = "Cine"
                        },
                        new
                        {
                            Id_interes = 2,
                            Descripcion = "",
                            Nombre = "Música"
                        },
                        new
                        {
                            Id_interes = 3,
                            Descripcion = "",
                            Nombre = "Juegos de mesa"
                        },
                        new
                        {
                            Id_interes = 4,
                            Descripcion = "",
                            Nombre = "Electrónica"
                        });
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.InteresesUsuarias", b =>
                {
                    b.Property<int>("Id_InteresesUsuarias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_InteresesUsuarias"), 1L, 1);

                    b.Property<int>("Fk_idInteres")
                        .HasColumnType("int");

                    b.Property<int>("Fk_idUsuaria")
                        .HasColumnType("int");

                    b.HasKey("Id_InteresesUsuarias");

                    b.HasIndex("Fk_idInteres");

                    b.HasIndex("Fk_idUsuaria");

                    b.ToTable("interesesUsuarias");

                    b.HasData(
                        new
                        {
                            Id_InteresesUsuarias = 1,
                            Fk_idInteres = 2,
                            Fk_idUsuaria = 1
                        },
                        new
                        {
                            Id_InteresesUsuarias = 2,
                            Fk_idInteres = 4,
                            Fk_idUsuaria = 1
                        },
                        new
                        {
                            Id_InteresesUsuarias = 3,
                            Fk_idInteres = 1,
                            Fk_idUsuaria = 2
                        },
                        new
                        {
                            Id_InteresesUsuarias = 4,
                            Fk_idInteres = 3,
                            Fk_idUsuaria = 2
                        });
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Publicaciones", b =>
                {
                    b.Property<int>("Id_publicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_publicacion"), 1L, 1);

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuerpo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificacionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reacciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("fk_idFoto")
                        .HasColumnType("int");

                    b.Property<int>("fk_idUsuaria")
                        .HasColumnType("int");

                    b.HasKey("Id_publicacion");

                    b.HasIndex("fk_idFoto");

                    b.HasIndex("fk_idUsuaria");

                    b.ToTable("publicaciones");

                    b.HasData(
                        new
                        {
                            Id_publicacion = 1,
                            Comentarios = "",
                            Cuerpo = "",
                            ModificacionDate = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4173),
                            Reacciones = "",
                            RegistrationDate = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4171),
                            fk_idFoto = 4,
                            fk_idUsuaria = 1
                        },
                        new
                        {
                            Id_publicacion = 2,
                            Comentarios = "",
                            Cuerpo = "",
                            ModificacionDate = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4178),
                            Reacciones = "",
                            RegistrationDate = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4176),
                            fk_idFoto = 5,
                            fk_idUsuaria = 1
                        },
                        new
                        {
                            Id_publicacion = 3,
                            Comentarios = "",
                            Cuerpo = "",
                            ModificacionDate = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4181),
                            Reacciones = "",
                            RegistrationDate = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4180),
                            fk_idFoto = 9,
                            fk_idUsuaria = 2
                        },
                        new
                        {
                            Id_publicacion = 4,
                            Comentarios = "",
                            Cuerpo = "",
                            ModificacionDate = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4185),
                            Reacciones = "",
                            RegistrationDate = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4184),
                            fk_idFoto = 10,
                            fk_idUsuaria = 2
                        });
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Roles", b =>
                {
                    b.Property<int>("Id_rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_rol"), 1L, 1);

                    b.Property<string>("Accesos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_rol");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id_rol = 1,
                            Accesos = "",
                            Descripcion = "",
                            Nombre = "ADM"
                        },
                        new
                        {
                            Id_rol = 2,
                            Accesos = "",
                            Descripcion = "",
                            Nombre = "JD"
                        },
                        new
                        {
                            Id_rol = 3,
                            Accesos = "",
                            Descripcion = "",
                            Nombre = "JT"
                        },
                        new
                        {
                            Id_rol = 4,
                            Accesos = "",
                            Descripcion = "",
                            Nombre = "SOC"
                        },
                        new
                        {
                            Id_rol = 5,
                            Accesos = "",
                            Descripcion = "",
                            Nombre = "EXT"
                        });
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Usuarias", b =>
                {
                    b.Property<int>("Id_usuaria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_usuaria"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodPostal")
                        .HasColumnType("int");

                    b.Property<string>("Contra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Fk_IdAsociacion")
                        .HasColumnType("int");

                    b.Property<int?>("Fk_idInsignia")
                        .HasColumnType("int");

                    b.Property<int?>("Fk_idRol")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modification_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referentas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registration_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Socia")
                        .HasColumnType("bit");

                    b.Property<string>("TokenRecuperacionContrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Validado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Validation_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Validation_userid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidezDNI")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_usuaria");

                    b.HasIndex("Fk_IdAsociacion");

                    b.HasIndex("Fk_idInsignia");

                    b.HasIndex("Fk_idRol");

                    b.ToTable("usuarias");

                    b.HasData(
                        new
                        {
                            Id_usuaria = 1,
                            Apellidos = "Martinez",
                            Bio = "descripcion",
                            CodPostal = 36209,
                            Contra = "1234",
                            DNI = "5385752N",
                            Edad = 22,
                            Email = "sara22@gmail.com",
                            FechaNacimiento = new DateTime(2001, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fk_IdAsociacion = 1,
                            Fk_idInsignia = 1,
                            Fk_idRol = 1,
                            Modification_date = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4149),
                            NickName = "Sara22",
                            Nombre = "Sara",
                            Referentas = "",
                            Registration_date = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4147),
                            Socia = true,
                            TokenRecuperacionContrasena = "",
                            Ubicacion = "",
                            Validado = true,
                            Validation_date = new DateTime(1111, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Validation_userid = 0,
                            ValidezDNI = new DateTime(2027, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id_usuaria = 2,
                            Apellidos = "Fernandez",
                            Bio = "descripcion",
                            CodPostal = 36209,
                            Contra = "1234",
                            DNI = "5385752N",
                            Edad = 34,
                            Email = "Lucia34@gmail.com",
                            FechaNacimiento = new DateTime(1987, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fk_IdAsociacion = 1,
                            Fk_idInsignia = 3,
                            Fk_idRol = 1,
                            Modification_date = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4157),
                            NickName = "Lucia34",
                            Nombre = "Lucía",
                            Referentas = "",
                            Registration_date = new DateTime(2023, 11, 20, 11, 52, 21, 328, DateTimeKind.Local).AddTicks(4156),
                            Socia = true,
                            TokenRecuperacionContrasena = "",
                            Ubicacion = "",
                            Validado = false,
                            Validation_date = new DateTime(1111, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Validation_userid = 0,
                            ValidezDNI = new DateTime(2027, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Fotos", b =>
                {
                    b.HasOne("FMJ_Backend.Modelos.Usuarias", "usuaria")
                        .WithMany()
                        .HasForeignKey("Fk_idUsuaria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuaria");
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.InteresesUsuarias", b =>
                {
                    b.HasOne("FMJ_Backend.Modelos.Intereses", "intereses")
                        .WithMany()
                        .HasForeignKey("Fk_idInteres")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FMJ_Backend.Modelos.Usuarias", "usuarias")
                        .WithMany()
                        .HasForeignKey("Fk_idUsuaria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("intereses");

                    b.Navigation("usuarias");
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Publicaciones", b =>
                {
                    b.HasOne("FMJ_Backend.Modelos.Fotos", "foto")
                        .WithMany()
                        .HasForeignKey("fk_idFoto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FMJ_Backend.Modelos.Usuarias", "usuaria")
                        .WithMany()
                        .HasForeignKey("fk_idUsuaria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("foto");

                    b.Navigation("usuaria");
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Usuarias", b =>
                {
                    b.HasOne("FMJ_Backend.Modelos.Asociaciones", "asociacion")
                        .WithMany()
                        .HasForeignKey("Fk_IdAsociacion");

                    b.HasOne("FMJ_Backend.Modelos.Insignias", "Insignia")
                        .WithMany()
                        .HasForeignKey("Fk_idInsignia");

                    b.HasOne("FMJ_Backend.Modelos.Roles", "Rol")
                        .WithMany()
                        .HasForeignKey("Fk_idRol");

                    b.Navigation("Insignia");

                    b.Navigation("Rol");

                    b.Navigation("asociacion");
                });
#pragma warning restore 612, 618
        }
    }
}
