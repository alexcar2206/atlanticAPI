// <auto-generated />
using System;
using FMJ_Backend.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FMJ_Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231120105112_crearTablas")]
    partial class crearTablas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FMJ_Backend.Modelos.Asociaciones", b =>
                {
                    b.Property<int>("Id_asociacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_asociacion"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registration_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_asociacion");

                    b.ToTable("asociaciones");
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Fotos", b =>
                {
                    b.Property<int>("Id_Foto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Foto"), 1L, 1);

                    b.Property<int>("Fk_idUsuaria")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Foto");

                    b.HasIndex("Fk_idUsuaria");

                    b.ToTable("fotos");
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Insignias", b =>
                {
                    b.Property<int>("Id_insignia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_insignia"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_insignia");

                    b.ToTable("insignias");
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Intereses", b =>
                {
                    b.Property<int>("Id_interes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_interes"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_interes");

                    b.ToTable("intereses");
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.InteresesUsuarias", b =>
                {
                    b.Property<int>("Id_InteresesUsuarias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_InteresesUsuarias"), 1L, 1);

                    b.Property<int>("Fk_idInteres")
                        .HasColumnType("int");

                    b.Property<int>("Fk_idUsuaria")
                        .HasColumnType("int");

                    b.HasKey("Id_InteresesUsuarias");

                    b.HasIndex("Fk_idInteres");

                    b.HasIndex("Fk_idUsuaria");

                    b.ToTable("interesesUsuarias");
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Publicaciones", b =>
                {
                    b.Property<int>("Id_publicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_publicacion"), 1L, 1);

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuerpo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificacionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reacciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("fk_idFoto")
                        .HasColumnType("int");

                    b.Property<int>("fk_idUsuaria")
                        .HasColumnType("int");

                    b.HasKey("Id_publicacion");

                    b.HasIndex("fk_idFoto");

                    b.HasIndex("fk_idUsuaria");

                    b.ToTable("publicaciones");
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Roles", b =>
                {
                    b.Property<int>("Id_rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_rol"), 1L, 1);

                    b.Property<string>("Accesos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_rol");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Usuarias", b =>
                {
                    b.Property<int>("Id_usuaria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_usuaria"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodPostal")
                        .HasColumnType("int");

                    b.Property<string>("Contra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Fk_IdAsociacion")
                        .HasColumnType("int");

                    b.Property<int?>("Fk_idInsignia")
                        .HasColumnType("int");

                    b.Property<int?>("Fk_idRol")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modification_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referentas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Registration_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Socia")
                        .HasColumnType("bit");

                    b.Property<string>("TokenRecuperacionContrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Validado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Validation_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Validation_userid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidezDNI")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_usuaria");

                    b.HasIndex("Fk_IdAsociacion");

                    b.HasIndex("Fk_idInsignia");

                    b.HasIndex("Fk_idRol");

                    b.ToTable("usuarias");
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Fotos", b =>
                {
                    b.HasOne("FMJ_Backend.Modelos.Usuarias", "usuaria")
                        .WithMany()
                        .HasForeignKey("Fk_idUsuaria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuaria");
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.InteresesUsuarias", b =>
                {
                    b.HasOne("FMJ_Backend.Modelos.Intereses", "intereses")
                        .WithMany()
                        .HasForeignKey("Fk_idInteres")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FMJ_Backend.Modelos.Usuarias", "usuarias")
                        .WithMany()
                        .HasForeignKey("Fk_idUsuaria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("intereses");

                    b.Navigation("usuarias");
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Publicaciones", b =>
                {
                    b.HasOne("FMJ_Backend.Modelos.Fotos", "foto")
                        .WithMany()
                        .HasForeignKey("fk_idFoto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FMJ_Backend.Modelos.Usuarias", "usuaria")
                        .WithMany()
                        .HasForeignKey("fk_idUsuaria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("foto");

                    b.Navigation("usuaria");
                });

            modelBuilder.Entity("FMJ_Backend.Modelos.Usuarias", b =>
                {
                    b.HasOne("FMJ_Backend.Modelos.Asociaciones", "asociacion")
                        .WithMany()
                        .HasForeignKey("Fk_IdAsociacion");

                    b.HasOne("FMJ_Backend.Modelos.Insignias", "Insignia")
                        .WithMany()
                        .HasForeignKey("Fk_idInsignia");

                    b.HasOne("FMJ_Backend.Modelos.Roles", "Rol")
                        .WithMany()
                        .HasForeignKey("Fk_idRol");

                    b.Navigation("Insignia");

                    b.Navigation("Rol");

                    b.Navigation("asociacion");
                });
#pragma warning restore 612, 618
        }
    }
}
